System Shock 2:
  
  # Determines if v-sync should be utilized for input injection. 
  # Enabling this synchronizes the input injection with the display vblank
  # which may provide better synchronization if the game also uses v-sync.
  # Remember to keep the PulseKey window on the relevant display.
  USE_VSYNC: true
  # Specifies the fraction of the current frame's duration where to inject input.
  # A value of 0.5, for example, would inject input halfway through the frame ((2 / 144) seconds after vblank on a 144 Hz monitor).
  # Only applicable if USE_VSYNC is true.
  INJECTION_FRAME_OFFSET_FRACTION: 0.4
  # Defines the rate at which inputs should be injected per second.
  # A lower rate makes PWM less smooth, while a too high rate could flood the WinAPI with excessive virtual input events.
  # Only applicable if USE_VSYNC is false.
  INJECTION_FRAMERATE: 500

  # For virtual key-codes, see: https://learn.microsoft.com/en-us/windows/win32/inputdev/virtual-key-codes
  # Convert hexadecimal values to decimal.

  # For SDL game controller buttons, see: https://wiki.libsdl.org/SDL2/SDL_GameControllerButton
  # Note: Left trigger is coded as 100, and right trigger as 101.

  # Game controller button presses mapped to key down + up events.
  BUTTON_DOWN_TO_KEY_PRESS:
    #FROM : TO
    6  : 9  # SDL_CONTROLLER_BUTTON_START -> VK_TAB
    1  : 32 # SDL_CONTROLLER_BUTTON_B -> VK_SPACE
    2  : 16 # SDL_CONTROLLER_BUTTON_X -> VK_SHIFT
    3  : 79 # SDL_CONTROLLER_BUTTON_Y -> O
    4  : 77 # SDL_CONTROLLER_BUTTON_BACK -> m
    11 : 76 # SDL_CONTROLLER_BUTTON_DPAD_UP -> l
    12 : 85 # SDL_CONTROLLER_BUTTON_DPAD_DOWN -> u
    13 : 72 # SDL_CONTROLLER_BUTTON_DPAD_LEFT -> h
    14 : 73 # SDL_CONTROLLER_BUTTON_DPAD_RIGHT -> i
    100: 82 # SDL_CONTROLLER_TRIGGER_LEFT -> r

  # Game controller button presses mapped to key down events.
  BUTTON_DOWN_TO_KEY_DOWN: {} # Remove {} if used
    #FROM : TO

  # Game controller button releases mapped to key up events.
  BUTTON_UP_TO_KEY_UP: {} # Remove {} if used
    #FROM : TO

  # Game controller button releases mapped to key down + up events.
  BUTTON_UP_TO_KEY_PRESS:
    #FROM : TO
    4  : 9 # SDL_CONTROLLER_BUTTON_BACK -> VK_TAB

  # Game controller button presses mapped to mouse events (see game_config.h for mouse events).
  BUTTON_DOWN_TO_MOUSE_EVENT:
    #FROM : TO
    0  : 3 # SDL_CONTROLLER_BUTTON_A -> MOUSE_RIGHT_PRESS
    101: 1 # SDL_CONTROLLER_TRIGGER_RIGHT -> MOUSE_LEFT_DOWN
    9  : 7 # SDL_CONTROLLER_BUTTON_LEFTSHOULDER -> MOUSE_WHEEL_UP
    10 : 6 # SDL_CONTROLLER_BUTTON_RIGHTSHOULDER -> MOUSE_WHEEL_DOWN
  
  # Game controller button releases mapped to mouse events (see game_config.h for mouse events).
  BUTTON_UP_TO_MOUSE_EVENT:
    #FROM : TO
    101: 2 # SDL_CONTROLLER_TRIGGER_RIGHT -> MOUSE_LEFT_UP

  # Selects the analog stick to be used for looking/mouse input,
  # with -1 for none, 0 for the left stick, and 1 for the right stick.
  LOOK_STICK: 1

  # Keys which the left stick presses using pulse-width modulation.
  LEFT_STICK_KEY_LEFT : 65 # A
  LEFT_STICK_KEY_RIGHT: 68 # D
  LEFT_STICK_KEY_UP   : 87 # W
  LEFT_STICK_KEY_DOWN : 83 # S

  # Keys which the right stick presses using pulse-width modulation.
  RIGHT_STICK_KEY_LEFT : 0
  RIGHT_STICK_KEY_RIGHT: 0
  RIGHT_STICK_KEY_UP   : 0
  RIGHT_STICK_KEY_DOWN : 0

  # Specifies the minimum and maximum stick values for movement,
  # translating the range to a PWM duty cycle for key presses.
  # Full axis range is 0 to 32767.
  MOVE_SPEED_MIN_AXIS_VALUE: 5000
  MOVE_SPEED_MAX_AXIS_VALUE: 32767
  # Sets the minimum duty cycle for movement as a fraction (0 to 1).
  # This ensures a minimum "off" period for PWM movement.
  MOVE_SPEED_DUTY_CYCLE_MIN: 0.3

  # Specifies the minimum and maximum stick values for looking,
  # translating the range to a look speed with optional easing.
  # Full axis range is 0 to 32767.
  LOOK_SPEED_MIN_AXIS_VALUE: 5000
  LOOK_SPEED_MAX_AXIS_VALUE: 32767
  # Look speed in pixels when stick equals the min axis value.
  LOOK_SPEED_MIN_X         : 0
  LOOK_SPEED_MIN_Y         : 0
  # Look speed in pixels when stick is over the max axis value.
  LOOK_SPEED_MAX_X         : 800
  LOOK_SPEED_MAX_Y         : 800
  # Must be positive or 0 if disabled, controls the easing curvature. >0 to 1 is a reasonable curve.
  LOOK_EASING              : 0

  # Sets the trigger depth threshold for recognizing trigger presses, with values ranging from 0 to 32767.
  TRIGGER_DEPTH: 16384
